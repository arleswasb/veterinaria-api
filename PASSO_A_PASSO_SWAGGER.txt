===============================================
    PASSO A PASSO - LOGIN E USO DO SWAGGER UI
===============================================

📋 GUIA COMPLETO PARA USAR A API COM AUTENTICAÇÃO
Versão: 1.0 | Data: 01/07/2025

===============================================
📌 PRÉ-REQUISITOS
====================================🔐 OPÇÃO 1: OAuth2 Direto no Swagger (MAIS FÁCIL)
✅ Use a janela "Available authorizations"
✅ Interface simplificada com apenas username e password
✅ Funciona se o servidor estiver configurado corretamente================
⚠️ NOVIDADE - INTERFACE SIMPLIFICADA!
===============================================

🎉 MUDANÇA IMPORTANTE: Simplificamos a interface de autenticação!

✅ ANTES: Interface OAuth2 com campos extras
   - username, password, client_id, client_secret...
   - Confusa e difícil de usar

✅ AGORA: Interface HTTPBearer simples + Endpoint limpo
   - Endpoint /api/token: apenas username e password
   - Authorize: apenas 1 campo "Value"
   - Muito mais simples!

COMO USAR A NOVA INTERFACE:
1. POST /api/token → Copie o access_token
2. Botão "Authorize" → Cole no campo "Value"
3. Pronto! Muito mais simples.

Esta mudança torna a API muito mais fácil de usar! 🚀===================

1. ✅ Servidor da API rodando
   - Execute: python -m uvicorn main:app --reload
   - Acesse: http://127.0.0.1:8000

2. ✅ Banco de dados inicializado
   - Execute: python init_db.py
   - Execute: python populate_db.py (para dados de exemplo)

3. ✅ Browser aberto no Swagger UI
   - URL: http://127.0.0.1:8000/docs

===============================================
🚀 PASSO 1: ACESSAR O SWAGGER UI
===============================================

1. Abra seu navegador
2. Vá para: http://127.0.0.1:8000/docs
3. Você verá a interface do Swagger com todos os endpoints

===============================================
🔐 PASSO 2: FAZER LOGIN (OBTER TOKEN)
===============================================

MÉTODO A: USANDO USUÁRIOS DE EXEMPLO
------------------------------------
Usuários pré-cadastrados:
• Username: admin    | Senha: admin123
• Username: demo     | Senha: demo123

MÉTODO B: REGISTRAR NOVO USUÁRIO
---------------------------------
1. No Swagger, procure a seção "🔐 Autenticação"
2. Clique em "POST /api/register"
3. Clique em "Try it out"
4. Preencha o JSON:
   {
     "username": "meuusuario",
     "email": "meu@email.com", 
     "password": "minhasenha123"
   }
5. Clique em "Execute"
6. Anote o username criado

PASSO 2.1: OBTER TOKEN JWT
--------------------------
1. No Swagger, procure "POST /api/token"
2. Clique em "Try it out"
3. Preencha os campos necessários:
   ✅ username: admin
   ✅ password: admin123
   
4. Clique em "Execute"
5. Na resposta, COPIE o valor do "access_token"
   Exemplo: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

✅ INTERFACE SIMPLIFICADA: Agora o endpoint só mostra os campos essenciais!

===============================================
🔑 PASSO 3: CONFIGURAR AUTENTICAÇÃO NO SWAGGER
===============================================

MÉTODO SIMPLES (2 ETAPAS):

ETAPA 3.1: OBTER TOKEN VIA API
-----------------------------
1. No Swagger, vá para "POST /api/token"
2. Clique em "Try it out"
3. Preencha:
   - username: admin
   - password: admin123
4. Clique em "Execute"
5. COPIE todo o access_token da resposta
   (exemplo: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...)

ETAPA 3.2: CONFIGURAR NO BOTÃO AUTHORIZE
----------------------------------------
1. Clique no botão "Authorize" (cadeado verde no topo)
2. Na janela que abrir, você verá apenas um campo:
   
   ┌─ Available authorizations ─────────────────┐
   │                                            │
   │ 🔐 HTTPBearer (http, bearer)               │
   │                                            │
   │ 📝 Value: [cole seu token aqui]            │
   │                                            │
   │ [Authorize] [Close]                        │
   └────────────────────────────────────────────┘

3. No campo "Value", cole apenas o TOKEN (sem "Bearer"):
   ✅ Exemplo: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
   ❌ NÃO cole: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

4. Clique em "Authorize"
5. Clique em "Close"

✅ AGORA você verá cadeados fechados nos endpoints protegidos!

===============================================
🔧 EXEMPLO VISUAL COMPLETO - JANELA SIMPLES
===============================================

🎉 NOVA INTERFACE SIMPLIFICADA!

A janela "Available authorizations" agora é muito mais simples:

┌─ Available authorizations ─────────────────┐
│                                            │
│ 🔐 HTTPBearer (http, bearer)               │
│                                            │
│ � Value: [cole apenas o token aqui]       │
│                                            │
│ [Authorize] [Close]                        │
└────────────────────────────────────────────┘

🎯 PASSO A PASSO SUPER SIMPLES:
1. ✅ Obtenha o token via POST /api/token
2. ✅ Clique "Authorize" 
3. ✅ Cole o token no campo "Value"
4. ✅ Clique "Authorize"
5. ✅ Clique "Close"

EXEMPLO PRÁTICO:
Token obtido: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiJ9.xxx
Cole no campo: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiJ9.xxx

⚠️ IMPORTANTE: Cole APENAS o token, SEM a palavra "Bearer"!

===============================================
🏥 PASSO 4: TESTAR ENDPOINTS PROTEGIDOS
===============================================

TESTE 1: VERIFICAR SEU PERFIL
-----------------------------
1. Procure "GET /api/users/me"
2. Clique em "Try it out"
3. Clique em "Execute"
4. Você deve ver seus dados de usuário

TESTE 2: CRIAR UMA CLÍNICA (PROTEGIDO)
--------------------------------------
1. Procure "POST /api/clinicas"
2. Clique em "Try it out"
3. Preencha o JSON:
   {
     "nome": "Clínica Teste",
     "cidade": "São Paulo",
     "endereco": "Rua Teste, 123"
   }
4. Clique em "Execute"
5. Se autenticado, a clínica será criada

===============================================
📊 PASSO 5: USAR OUTROS ENDPOINTS
===============================================

ENDPOINTS PÚBLICOS (não precisam de token):
• GET /api/clinicas - Listar clínicas
• GET /api/veterinarios - Listar veterinários
• GET /api/pets - Listar pets

ENDPOINTS QUE PODEM PRECISAR DE DADOS:
• POST /api/veterinarios - Cadastrar veterinário
• POST /api/tutores - Cadastrar tutor
• POST /api/pets - Cadastrar pet
• POST /api/atendimentos - Registrar atendimento

EXEMPLO - CRIAR VETERINÁRIO:
---------------------------
1. Procure "POST /api/veterinarios"
2. Clique em "Try it out"
3. Preencha:
   {
     "nome": "Dr. João Silva",
     "crmv": "SP-12345",
     "email": "joao@teste.com",
     "especialidade": "Clínica Geral",
     "clinica_id": 1
   }

===============================================
🛠️ SOLUÇÃO DE PROBLEMAS - INTERFACE SIMPLIFICADA
===============================================

PROBLEMA: Interface ainda mostra OAuth2 complexa
SOLUÇÃO: 
• Pare o servidor (Ctrl+C)
• Reinicie: python -m uvicorn main:app --reload
• Recarregue a página do Swagger
• Agora deve aparecer a interface simples com apenas 1 campo

PROBLEMA: "Could not validate credentials"
SOLUÇÃO: 
• Verifique se copiou o token completo (muito longo!)
• Verifique se não incluiu "Bearer " no início
• Token deve ser apenas: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

PROBLEMA: Token muito longo para copiar
SOLUÇÃO:
• No resultado do POST /api/token, clique no token
• Use Ctrl+A para selecionar tudo
• Ou use Ctrl+C após selecionar o texto

PROBLEMA: Cadeados não ficam fechados
SOLUÇÃO:
• Teste GET /api/users/me para confirmar autenticação
• Se funcionar, os cadeados devem aparecer fechados
• Recarregue a página se necessário

PROBLEMA: Interface não mudou
SOLUÇÃO:
• Certifique-se de ter parado e reiniciado o servidor
• Limpe o cache do browser (Ctrl+F5)
• Verifique se as mudanças foram salvas no código

PROBLEMA: "Username já está registrado"
SOLUÇÃO:
• Use um username diferente
• Ou faça login com o usuário existente

PROBLEMA: Endpoint retorna erro 422
SOLUÇÃO:
• Verifique se todos os campos obrigatórios estão preenchidos
• Verifique o formato dos dados (email válido, etc.)

PROBLEMA: Clínica não existe (ao criar veterinário)
SOLUÇÃO:
• Primeiro crie uma clínica
• Use o ID da clínica criada no campo clinica_id

===============================================
🎯 FLUXO COMPLETO DE TESTE - MÉTODO SIMPLIFICADO
===============================================

1. INICIAR SERVIDOR
   python -m uvicorn main:app --reload

2. ABRIR SWAGGER
   http://127.0.0.1:8000/docs

3. OBTER TOKEN
   - Vá para POST /api/token
   - Try it out
   - username: admin
   - password: admin123
   - Execute
   - COPIE o access_token completo

4. AUTORIZAR NO SWAGGER (NOVA INTERFACE!)
   - Clique no botão "Authorize" (cadeado verde)
   - Na janela simples que abrir:
   - Cole o token no campo "Value"
   - Clique "Authorize" → "Close"

5. TESTAR AUTENTICAÇÃO
   GET /api/users/me (deve mostrar dados do usuário admin)

6. TESTAR ENDPOINT PROTEGIDO
   POST /api/clinicas (deve permitir criar clínica)

✅ VANTAGEM: Interface muito mais simples!
✅ Apenas 1 campo para preencher (o token)
✅ Endpoint de login mostra apenas username e password!

===============================================
📚 INFORMAÇÕES ADICIONAIS
===============================================

• Token JWT expira em 30 minutos
• Sempre use o formato: Bearer TOKEN
• Endpoints protegidos têm ícone de cadeado
• Swagger UI salva automaticamente a autenticação
• Para logout, simplesmente feche o browser

DOCUMENTAÇÃO COMPLETA:
• README.md - Guia geral do projeto
• AUTHENTICATION.md - Detalhes de autenticação
• Swagger UI - Documentação interativa

===============================================
✅ CHECKLIST DE VERIFICAÇÃO
===============================================

□ Servidor rodando em http://127.0.0.1:8000
□ Swagger acessível em /docs
□ Login realizado com sucesso
□ Token copiado e configurado no "Authorize"
□ Endpoint GET /api/users/me funcionando
□ Consegue criar clínica (endpoint protegido)
□ Endpoints públicos funcionando normalmente

===============================================
🎉 PRONTO! VOCÊ ESTÁ USANDO A API!
===============================================

Agora você pode explorar todos os endpoints da API
através da interface amigável do Swagger UI.

Para mais ajuda, consulte:
• README.md
• AUTHENTICATION.md  
• Issues no GitHub

===============================================
⚠️ AVISO IMPORTANTE - DUAS OPÇÕES DISPONÍVEIS
===============================================

� OPÇÃO 1: OAuth2 Direto no Swagger (MAIS FÁCIL)
✅ Use a janela "Available authorizations"
✅ Preencha apenas username e password
✅ Deixe client_id e client_secret vazios
✅ Funciona se o servidor estiver configurado corretamente

🔐 OPÇÃO 2: Token Manual (SE OPÇÃO 1 FALHAR)
✅ Use POST /api/token para obter access_token
✅ Cole manualmente em cada endpoint protegido
✅ Formato: Authorization: Bearer TOKEN
✅ Funciona sempre, mesmo com problemas de configuração

RECOMENDAÇÃO: Tente primeiro a Opção 1 (mais fácil).
Se não funcionar, use a Opção 2 (mais manual mas sempre funciona).

===============================================
📝 INFORMAÇÕES ADICIONAIS
===============================================

• Para mais detalhes sobre autenticação, veja o arquivo AUTHENTICATION.md
• Qualquer problema, abra uma issue no GitHub
• Contribuições são bem-vindas! Veja o README.md para mais informações

===============================================
🎉 ATUALIZAÇÃO IMPORTANTE - INTERFACE SIMPLIFICADA
===============================================

✅ NOVA IMPLEMENTAÇÃO: Endpoint /api/token simplificado!

🤔 "Ainda vejo campos extras no login?"
❌ **NÃO!** O endpoint agora mostra apenas username e password.

🤔 "E o que mudou?"
✅ **Interface limpa!** Apenas os campos essenciais são exibidos.

🤔 "Como faço login agora?"
💡 Exatamente igual, mas sem confusão de campos extras.

RESUMO SIMPLES:
• username: admin ✅
• password: admin123 ✅  
• Só isso! Muito mais simples! ✅

===============================================
📝 EXEMPLO PRÁTICO NO SWAGGER - VERSÃO ATUALIZADA
===============================================

1. Vá para "POST /api/token"
2. Clique em "Try it out"
3. Preencha (só isso!):
   - username: admin
   - password: admin123
4. Clique em "Execute"
5. Copie o access_token da resposta

🔑 Agora, configure no Swagger:
1. Clique em "Authorize"
2. No campo "Value", cole o token (sem "Bearer")
3. Clique em "Authorize" e depois em "Close"

✅ Pronto! Interface muito mais limpa e simples de usar.

===============================================
